"""
Модуль для обчислення інтегралу методом Монте-Карло.

Цей модуль містить функцію для обчислення наближеного значення визначеного інтегралу
функції за допомогою методу Монте-Карло. Метод використовує випадкові точки для
оцінки площі під графіком заданої функції.
"""

import numpy as np
from .analytic import f

def monte_carlo_integration(a: float, b: float, N: int, seed: int = 42) -> tuple:
    """
    Обчислює визначений інтеграл функції f(x) на відрізку [a, b] методом Монте-Карло.

    Параметри:
    a (float): Початкова межа інтегрування.
    b (float): Кінцева межа інтегрування.
    N (int): Кількість випадкових точок для оцінки інтегралу.
    seed (int, optional): Випадкове число для фіксації генерації випадкових чисел (за замовчуванням 42).

    Повертає:
    tuple: Оцінене значення інтегралу, масив булевих значень (показує, які точки під кривою),
           масив випадкових x-координат та масив випадкових y-координат.
    """

    # Фіксація випадкового числа для генерації
    np.random.seed(seed)

    # Генерація випадкових x та y координат
    x_random = np.random.uniform(a, b, N)
    y_random = np.random.uniform(0, max(f(np.linspace(a, b, 1000))), N)

    # Перевірка, які точки під кривою
    under_curve = y_random < f(x_random)

    # Обчислення інтегралу методом Монте-Карло
    integral_monte_carlo = (b - a) * max(f(np.linspace(a, b, 1000))) * np.sum(under_curve) / N

    return integral_monte_carlo, under_curve, x_random, y_random
